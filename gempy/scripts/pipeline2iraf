#!/usr/bin/env python

import sys
import argparse

from gempy.gemini import irafcompat
import astrodata
import gemini_instruments

VERSION = '0.1.0'

SHORT_DESCRIPTION = 'Make pipeline-processed files compatible with \
                     the Gemini IRAF scripts.'

def parse_args(command_line_args):
    """
    Parse command line arguments.
    """
    
    parser = argparse.ArgumentParser(description=SHORT_DESCRIPTION)
    parser.add_argument('files', type=str, nargs='*',
                        help='Input pipeline-processed files')
    parser.add_argument('--dryrun', dest='dry_run',
                        action='store_true', default=False,
                        help='Show changes but do not apply them.')
    parser.add_argument('-v', '--verbose', dest='verbose',
                        action='store_true', default=False,
                        help='Toggle on the verbose mode.')
    parser.add_argument('--debug', dest='debug',
                        action='store_true', default=False,
                        help='Toggle on the debug messages.')
    
    args = parser.parse_args(command_line_args)
    
    if args.debug:
        args.verbose = True
        print args
        
    if args.dry_run:
        args.verbose = True
    
    return args

#------------------
def main(argv=None):
    if argv is None:
        argv = sys.argv
        
    args = parse_args(sys.argv[1:])

    for filename in args.files:
        ad = astrodata.open(filename)
        irafcompat.pipeline2iraf(ad, args.verbose)
        if not args.dry_run:
            astrodata.write(ad.path, ad, clobber=True)

if __name__ == '__main__':
    sys.exit(main())
