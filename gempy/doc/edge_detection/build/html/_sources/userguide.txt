UserGuide
----------

- **Edge Detection** scripts consists of 2 user callable functions or
  ULFs, namely *trace_slits* and *cut_slits*. 

  .. code-block:: python

    # import the module containing the functions.
    >>> from gempy.science import extract as extr
    >>> from astrodata import AstroData
    >>> from astrodata.adutils import gemLog

    >>> log=gemLog.createGeminiLog()     # Global variable needed by the ULF's

        # TEST DATA
        # Input data has been prepared and combined.
        # This is a GNIRS XDIS FLAT exposure. It is in the
        # SVN/test_data/edge_detection directory along with
        # fS20100220S0035_comb.fits  (F2)
        # nN20101215S0475_comb.fits (GMOS MOS)

    >>> ad=AstroData('/mydata/nN20101215S0475_comb.fits')

        # Trace_slits takes a prepared FLAT image and produces a 
        # bintable extension TRACESLI in adout.
    >>> adout = extr.trace_slits(ad)

        # list information about each unit in the output ad object.
    >>> adout[0].info()             # adout is a list of ad objects

        # Use this output and cut the regions containing slits.
    >>> ad_slits = extr.cut_slits(adout)

        # Write out a FITS file in the working directory with the name
        # 'my_cuts.fits'
    >>> ad_slits[0].filename = 'my_cuts.fits'
    >>> ad_slits[0].write()

        # NOTE: When displaying the IMAGE extension containing
                cuts, these will show thin stripes on the areas
                outside the slits. These are temporary and are meant to
                show the extension of the zerout procedure.

- **Primitives**. *trace_slits* and *cut_slits* are wrapped in primitives
  for use in recipes.

    **traceSlits**

    Input is the astrodata object with the SCI extension containing the
    Flat spectroscopic exposure. The input filename must be already 
    *prepared* and the SCI extension must have the *dispaxis* keyword.

    Output is a copy of the input astrodata object with the Bintable 
    appended. The extension EXTNAME is 'TRACESLI' and EXTVER is 1.

    **cutSlits**

    Input is the AD object result in *traceSlits*; this should have
    the extension TRACESLI. *cutSlits* output is an AD object with
    a list of SCI,DQ,VAR extensions.

- **Recipe**. A recipe can have both primitives in order or just
   *traceSlits*. For example:

   ::

      File: recipe.traceslits
    
      traceSlits
      cutslits
      showOutputs

    

    
