.TH reduce_alpha 1 "1 Dec. 2016" "version 0.1" "reduce man page"
.SH NAME
reduce_alpha - New reduce (New Hope).
.SH SYNOPSIS
reduce_alpha
.B [-h] [-v] [-d] [--context 
CONTEXT
.B ] [--logmode 
LOGMODE
.B ] [--logfile 
LOGFILE
.B ] [--loglevel 
.B LOGLEVEL] [-p 
USERPARAM 
.B [
USERPARAM ...
.B ]] [-r 
RECIPENAME
.B ] [--user_cal 
USER_CAL
.B ] [--suffix 
SUFFIX
.B ]
fitsfile [ fitsfile ... ]

.SH DESCRIPTION
.B reduce_alpha(1) 
provides a command line interface that can be configured and launch a Recipe System p
rocessing pipeline (a 'recipe') on input dataset(s). Control of reduce and the Recipe 
System is provided by a variety of options and switches.

.SH OPTIONS
.TP 
.B -h, --help
show the
.B reduce_alpha
help message and exit
.TP 
.B -v, --version
show program's version number and exit
.TP
.B -d , --displayflags
display all parsed option flags and exit.
.TP 
.B --context CONTEXT
Use
.B CONTEXT
for recipe selection and primitives sensitive to context. Current values supported are 
.B QA 
and 
.B SQ
(default is
.B QA
)
.RS
Eg.,
.RS
.B --context QA
.RE
.RE
.TP 
.B --logmode LOGMODE
Set log mode. One of 
.B standard, console, quiet, debug, or null
(default is
.B standard
)
.TP 
.B --logfile LOGFILE
name of log file (default is 
.B 'reduce.log'
)
.TP 
.B --loglevel LOGLEVEL
Set the verbose level for console logging. One of
.RS
.B critical, error, warning, status, stdinfo, fullinfo, debug 
(default is 
.B stdinfo
)
.RE
.RE
.TP 
.B -p USERPARAM [USERPARAM ...], --param USERPARAM [USERPARAM ...]
Set a primitive parameter from the command line. The form, 
.B -p par=val
sets a parameter such that all primitives with that defined parameter will 'see' it. 
The form:  
.B -p primitivename:par=val
, focuses the parameter only for 
.B 'primitivename'
 . Separate par/val pairs by whitespace: (eg. 
.B -p par1=val1 par2=val2
).
.TP
.B -r RECIPENAME, --recipe RECIPENAME
Specify a recipe by name. Users can request non-default system recipe functions by 
their simple names, e.g., 
.B -r qaStack 
OR may specify their own recipe file and recipe function. A user defined recipe 
function must be 'dotted' with the recipe file.
.RS
E.g.,  
.RS
.B -r /path/to/recipes/recipefile.recipe_function
.RE
For a recipe file in the current working directory (cwd), only the file name is 
needed, as in, 
.RS
.B -r recipefile.recipe_function
.RE
The fact that the recipe function is dotted with the recipe file name implies that 
multiple user defined recipe functions can be defined in a single file.

Readers should understand that these recipe files shall behave as python modules and 
should be named accordingly. I.e., in the example above, 
.B 'recipefile' 
is a python module named, 
.B 'recipefile.py'
.
.RE
.TP
.B --user_cal USER_CAL
Specify user supplied calibrations for calibration types.
.RS
Eg.,
.RS 
.B --user_cal gsTest_arc.fits
.RE
.RE
.TP 
.B --suffix SUFFIX
Add 'suffix' to filenames at end of reduction.


.SH ENVIRONMENT
Recommend Anaconda 4.2.0, Astropy 1.2.1. (Ureka 1.5.2 should also work
for awhile.)

.SH BUGS
Missing option to allow a user to provide a user-defined primitive class, 
.B --user_primitives
(TBD)

.SH SEE ALSO 
.I typewalk(1)
