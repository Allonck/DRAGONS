.TH reduce_alpha 1 "1 Dec. 2016" "version 0.1" "reduce man page"
.SH NAME
reduce_alpha \- recipe system, v2.0, command line interface (cli)
.SH SYNOPSIS
.B reduce_alpha 
[\fB\-h\fR] 
[\fB\-v\fR]
[\fB\-d\fR]
[\fB\--context\fR CONTEXT]
[\fB\--logmode\fR LOGMODE]
[\fB\--logfile\fR LOGFILE]
[\fB\--loglevel\fR LOGLEVEL]
[\fB\-p\fR USERPARAM [USERPARAM ...]]
[\fB\-r\fR RECIPENAME]
[\fB\--suffix\fR SUFFIX]
[\fB\--upload_metrics\fR]
[\fB\--user_cal\fR USER_CAL]
fitsfile [fitsfile ...]

.SH DESCRIPTION
.B reduce_alpha(1) 
provides a command line interface that can be configured and launch a Recipe System p
rocessing pipeline (a 'recipe') on input dataset(s). Control of reduce and the Recipe 
System is provided by a variety of options and switches.

.SH OPTIONS
.TP 
.B -h, --help
show the
.B reduce_alpha
help message and exit
.TP 
.B -v, --version
show program's version number and exit
.TP
.B -d , --displayflags
display all parsed option flags and exit.
.TP 
\fB\--context\fR CONTEXT
Use
.B CONTEXT
for recipe selection and primitives sensitive to context. Current values supported are 
.B QA 
and 
.B SQ
(default is
.B QA
)
.RS
Eg.,
.RS
.B --context QA
.RE
.RE
.TP 
\fB\--logfile\fR LOGFILE 
Name of log file (default is 
.B 'reduce.log'
)
.TP 
\fB\--loglevel\fR LOGLEVEL
Set the verbose level for console logging. One of
.RS
.B critical, error, warning, status, stdinfo, fullinfo, debug 
(default is 
.B stdinfo
)
.RE
.TP
\fB\--logmode\fR LOGMODE
Set log mode. One of \fB\ standard, console, quiet, debug, or null\fR
(default is \fB\ standard\fR)
.RE
.RE
.TP 
\fB\-p\fR USERPARAM [USERPARAM ...], \fB\--param\fR USERPARAM [USERPARAM ...]
Set a primitive parameter from the command line. The form, 
.B -p par=val
sets a parameter such that all primitives with that defined parameter will 'see' it. 
The form:  
\fB\-p primitivename:par=val\fR, focuses the parameter only for 'primitivename'.
Separate par/val pairs by whitespace:
.RS
E.g., \fB\-p\fR par1=val1 par2=val2).
.RE
.TP
\fB\-r\fR RECIPENAME, \fB\--recipe\fR RECIPENAME
Specify a recipe by name. Users can request non-default system recipe functions by 
their simple names, e.g., 
.B -r qaStack 
OR may specify their own recipe file and recipe function. A user defined recipe 
function must be 'dotted' with the recipe file.
.RS
E.g.,  
.RS
.B -r /path/to/recipes/recipefile.recipe_function
.RE

For a recipe file in the current working directory (cwd), only the file name is 
needed, as in, 
.RS
\fB\-r\fR recipefile.recipe_function
.RE

The fact that the recipe function is dotted with the recipe file name implies that 
multiple user defined recipe functions can be defined in a single file.

Readers should understand that these recipe files shall behave as python modules and 
should be named accordingly. I.e., in the example above, 
.B 'recipefile' 
is a python module named, 
.B 'recipefile.py'
.RE
.TP	
\fB\-\-upload_metrics\fR
Use this switch to send QA metrics to fitsstore. Default is \fBFalse\fR.
.RE
.TP
\fB\-\-user_cal\fR USER_CAL
Specify user supplied calibrations for calibration types.
.RS
Eg.,
.RS 
\fB\-\-user_cal\fR gsTest_arc.fits
.RE
.RE
.TP 
\fB\-\-suffix\fR SUFFIX
Add SUFFIX to filenames at end of reduction.

.SH ENVIRONMENT
Recommend Anaconda 4.2.0, Astropy 1.2.1. (Ureka 1.5.2 should also work
for awhile.)

.SH BUGS
Missing option to allow a user to provide a user-defined primitive class, 
.B --user_primitives
(TBD)

.SH SEE ALSO 
.I typewalk(1)
